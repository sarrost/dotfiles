                         = Index =

[[#General]]
[[#vimwiki]]

------------------------------------------------------------
= vimwiki =
------------------------------------------------------------
                        == local ==
------------------------------------------------------------
                    === normal mode ===
------------------------------------------------------------

------------------------------------------------------------
                    === visual mode ===
------------------------------------------------------------

------------------------------------------------------------
            === table mappings, insert mode ===
------------------------------------------------------------
	* `<CR>` - Go to the table cell beneath the current one, create a new row if on the last one.
	* `<Tab>` - Go to the next table cell, create a new row if on the last cell.
------------------------------------------------------------
             === list mappings, insert mode ===
------------------------------------------------------------

= General =
	* \re	--	Reload nvim

= View/Mode =
	*  -	--	Toggle Vifm
	* \gu	--	Toggle git gutter
	* \hi	--	Toggle hidden characters
	* \sp	--	Toggle spell check
	* \li	--	Toggle limelight
	* \go	--	Toggle goyo

= Menu/Window =
	* ''	--	FZF git repo (or current dir)
	* 'b	--	FZF buffer list
	* 'd	--	FZF dotfiles
	* 'g	--	:Rg<CR>
	* \gg	--	Fugitive git status UI
	* 'h	--	FZF help
	* 'l	--	:Lines<CR>
	* \ld	--	Gets the current document diagnostics
	* \ls	--	Gets the symbols for the current document
	* 'm	--	FZF marks
	* 'n	--	FZF notes
	* \q	--	FZF macros
	* 's	--	FZF scripts

= Non-file Edit =
	* \cr	--	Clear all register content

= Fugitive = 
	* \gP	--	Git push
	* \gp	--	Git pull
	* \ga :Gadd<CR>
	* \gb :Gblame<CR>
	* \gc :Gcommit<CR>
	* \gf :Gfetch<CR>
	* \gm :Gmerge<CR>

= Edit =
	* \sw	--	Sudo write file




nnoremap <silent> ]n :LspNextDiagnostic<CR>
nnoremap <silent> [n :LspPreviousDiagnostic<CR>
nnoremap <silent> \ld :LspDocumentDiagnostics<CR>
nnoremap <silent> \ls :LspDocumentSymbol<CR>
nnoremap <silent> >d :LspDefinition<CR>
nnoremap <silent> >D :LspDeclaration<CR>
nnoremap <silent> <d :LspPeekDefinition<CR>
nnoremap <silent> <D :LspPeekDeclaration<CR>



nmap [y <plug>(YoinkRotateBack)
nmap ]y <plug>(YoinkRotateForward)
" Change paste
nmap <expr> p yoink#canSwap() ? '<plug>(YoinkPostPasteSwapBack)' : '<plug>(YoinkPaste_p)'
nmap <expr> P yoink#canSwap() ? '<plug>(YoinkPostPasteSwapForward)' : '<plug>(YoinkPaste_P)'
" Remaps
nmap y <plug>(YoinkYankPreserveCursorPosition)
xmap y <plug>(YoinkYankPreserveCursorPosition)



"""				 Subversive
" s for substitute
nmap s <plug>(SubversiveSubstitute)
nmap ss <plug>(SubversiveSubstituteLine)
nmap S <plug>(SubversiveSubstituteToEndOfLine)
" substitute <motion1> over <motion1> with <input>.
nmap <C-s> <plug>(SubversiveSubstituteRange)
xmap <C-s> <plug>(SubversiveSubstituteRange)



" Play/record macros
nmap <silent> <M-q> <plug>(Mac_Play)
nmap <C-q> <plug>(Mac_RecordNew)
" Rotate macro history
nmap [q <plug>(Mac_RotateBack)
nmap ]q <plug>(Mac_RotateForward)
" Append/prepend to macro
nmap >q <plug>(Mac_Append)
nmap <q <plug>(Mac_Prepend)
" Store macro in register
nmap <M-Q> <plug>(Mac_StoreCurrent)






