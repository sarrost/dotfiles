                                                   = Vifm =
--------------------------------------------------------------------------------------------------------------
[[#normal-mode]] [[#visual-mode]] [[#view-mode]] [[#command-line-mode]] [[#pager-mode]] [[#menus-and-dialogs]]
--------------------------------------------------------------------------------------------------------------
                                               = normal-mode =
--------------------------------------------------------------------------------------------------------------
	* `ctrl-c esc`								 	Cancel most operations, clear all selected files.
	* `ctrl-l`										 	Clear and redraw the screen.
	* `[counnt]j / k`							 	move cursor down/up `n` (one if not specified) lines.
	* `[count]h / l`							 	Move up one dir/open file. In `ls-view` move left/right. In `tree-view` move to parent dir node.
	* `[n]gg / G`									 	Move to line `n` or to first/last line of file list if no `n` is given.
	* `enter`											 	Enter dir or launch a file.
	* `H / M / L`									 	Move to first/mid/last file in the window.
	* `ctrl-f / ctrl-b`						 	Move forward/backward one page.
	* `ctrl-d / ctrl-u`						 	Jump down/up half a page.
	* `{n}%`											 	Move to the file that is `n`% from the top.
	* `0 ^ / $`										 	Move cursor to first/last column. 
	* `ctrl-j`										 	Switch file lists.
	*	`zt / zz / zb`							 	Redraw pane with file in top/center/bottom of list.
	* `ctrl-e / ctrl-y`						 	Scroll pane one line down/up.
	* `/ / ?[regex]`							 	Forward/backward search for files. Perform prev search when no `regex` is given.
	* `[count]n / N`							 	Go to next/prev search result following search direction.
	* `[count]f / F[char]`				 	Search forward/backward for file with `char` as first char in name.
	* `[count];`										Enter command mode (alias for colon) `[count]` generates range.
	* `ctrl-v q:`										Open external editor to prompt for command-line command.
	* `q/ / q?`											Open external editor to prompt for search pattern to be searched in forward/backward direction.
	* `q=`													Open external editor to prompt for filter pattern.
	* `[count]!! / [count]!<selector>`	Enter command-line mode with bang (!).
	* `ctrl-o / ctrl-i`							Go backwards/forward through dir history.
	* `ctrl-g`											Show a dialog with detailed info about current file.
	* `shift-tab`										Enter view-mode in view pane.
	* `ga / gA`											Calculate dir size/and update cache.
	* `gf`													Find link destination.
	* `gr`													Sudo launch file.
	* `av`													Enter visual mode, ammend.
	* `gv`													Enter visual mode, restore last selection.
	* `[reg]gs`											Restore `reg` (last if not specified) selection.
	* `gu<selector> / [count]guu`		Lowercase filenames.
	* `gU<selector> / [count]gUU`		Uppercase filenames.
	* `e`														Explore file in current pane.
	* `cw / cW`											Change word/WORD, rename files (WORD is without ext).
	* `cl`													Change link target.
	* `co`													Change file owner.
	* `cg`													Change file group.
	* `[count]cp`											Change file attributes. If `[count]` is specified it's treated as numerical arg for non-recursive chmod command.
	* `[count]C`										Clone file `[count]` times.
	* `[count]dd / d<selector>`			Move files to trash.
	* `[count]yy [count]Y y<selector>`		Yank files.
	* `p / P`												Copy/move yanked files to current dir.
	* `al / rl`											Put symbolic links with abs/rel paths.
	* `t`														Select/unselect (tag) the current file.
	* `u / ctrl-r`									Undo/redo last change.
	* `v / V`												Start visual selection, clear current selection.
	* `[count]ctrl-a / ctrl-x`			Increase/decrease first number in filename by `[count]` (1 by default).
	*	`-`														Quit.
	* `.`														Repeat last cli cmd.
	* `) / (`												Go to next/prev group.
	* `} / {`												Go to nearest file/dir (whichever is opposite of current).
	* `]d / [d`											Go to next/prev dir.
	* `]s / [s`											Go to next/prev selected entry.
	* `]z / [z`											Go to first/last sibling of current entry.
	* `]r / [r`											Change to next/prev sibling dir.
	* `]R / [R`											Same as `]r/[r` with wrapping.
	* `za`													Toggle visibility of dot files.
	* `zo / zm`											Show/hide dot files.
	* `zf`													Add selected files to permanent filter.
	* `zO`													Reset permanent filter.
	* `zR`													Save and reset all filters.
	* `zr`													Clear local filter.
	* `zM`													Restore all filters (udoes last `zR`).
	* `zd`													Exclude selection or current file from a custom view.  Does nothing for `regular-view.`  For `tree-view` excluding directory excludes that sub-tree.  For `compare-views` zd hides group of adjacent identical files, count can be specified as 1 to exclude just single file or selected items instead.  Files excluded this way are not counted as filtered out and can't be returned unless view is reloaded.
	* `=regex`											Filter out files that don't match `regex`.
	* `ctrl-t`											Cycle split view.
--------------------------------------------------------------------------------------------------------------
                                               = visual-mode =
--------------------------------------------------------------------------------------------------------------
	* `enter`						Save selection and go back to normal mode not moving cursor.
	* `av`							Swith to ammending mode. Leave visual mode if in amending mode (restores previous selection).
	* `gv`							Restore previous visual selection.
	* `esc ctrl-c v V`	Leave visual mode. Switch to normal visual selection if in amending mode. 
	* `ctrl-g`					Switch type of amending by round robin scheme: append -> remove -> invert.
	* `;`								Enter command line mode. Selection is cleared on leaving the mode.
	* `o O`							Switch active selection bound.
	* `gu u / gU U`			Lowercase/uppercase selected file names.
--------------------------------------------------------------------------------------------------------------
                                                = view-mode =
--------------------------------------------------------------------------------------------------------------
	* `shift-tab tab q`					 Return to normal mode.
	* `[count]ctrl-e / ctrl-y`	 Scroll forward/backward `[count]` (one if not specified) lines.
	* `[count]ctrl-f / ctrl-b`	 Scroll forward/backward `[count]` (one if not specified) window.
	* `[count]z / w`						 Scroll forward/backward `[count]` (one if not specified) window (and set window to `[count]`).
	* `[count]ctrl-d / ctrl-u`	 Scroll forward/backward `[count]` (one if not specified) half-window (and set half-window to `[count]`).
	* `ctrl-l`									 Repaint screen.
	* `R`												 Reload view preserving scroll position.
	* `F`												 Toggle automatic forwarding.
	* `[count]/ / ?pattern`			 Search forward/backward for (`[count]`-th) matching line.
	* `[count]n / N`						 Repeat prev search (in reverse direction) for `[count]`-th (first if not specified) occurence.
	* `[count]g / G`						 Scroll to line `[count]` (first/last line if not specified) of the file.
	* `[count]p %`							 Scroll to `[count]`% (the beginning if not specified) of the file.
	* `v`												 Invoke an editor to edit the current file being viewed.
--------------------------------------------------------------------------------------------------------------
                                            = command-line-mode =
--------------------------------------------------------------------------------------------------------------
* `esc ctrl-c`						Leave command line mode, cancels input. 
* `enter`									Execute command and leave command line mode.
* `tab / shift-tab`				Complete command or its argument (in reverse order).
* `ctrl-_`								Stop completion and return original input.
* `ctrl-b / ctrl-f`				Move cursor to the left/right.
* `ctrl-a / ctrl-e`				Go to start/end of the line.
* `alt-b / alt-f`					Go to beginning of previous word/end of next word.
* `ctrl-u / ctrl-k`				Remove characters from cursor position till beginning/end of the line.
* `ctrl-h / ctrl-d`				Remove single character before/under the cursor.
* `ctrl-w / alt-d`				Remove characters from cursor position till beginning of previous/next word.
* `ctrl-t`								Swap the order of current and previous characters and move cursor forward.
* `alt-.`									Insert last part of previous command to current cursor position.
* `ctrl-g`								Edit command-line content in external editor.
* `ctrl-n / ctrl-p`				Recall more recent/older command-line from history.
* `ctrl-]`								Trigger abbreviation expansion.
* `[ctrl-x] ctrl-x c`			Name of the current file of the inactive/active pane.
* `[ctrl-x] ctrl-x d`			Path to the current directory of the inactive/active pane.
* `[ctrl-x] ctrl-x e`			Extension of the current file of the inactive/active pane.
* `[ctrl-x] ctrl-x r`			Name root of current file of the inactive/active pane.
* `[ctrl-x] ctrl-x t`			The last component of path to the current directory of the inactive/active pane.
* `ctrl-x a`							Value of implicit permanent filter (old name "automatic") of the active pane.
* `ctrl-x m`							Value of explicit permanent filter (old name "manual") of the active pane.
* `ctrl-x =`							Value of local filter of the active pane.
* `ctrl-x /`							Last pattern from search history.
%% --------------------------------------------------------------------------------------------------------------
%%                                                 = pager-mode =
%% --------------------------------------------------------------------------------------------------------------
%% enter ctrl-j j
%% backspace k
%% d
%% u
%% space f
%% b
%% G
%% g
%% q, esc ctrl-c
%% :
%% --------------------------------------------------------------------------------------------------------------
%% = menus-and-dialogs =
%% --------------------------------------------------------------------------------------------------------------
%% j ctrl-n
%% k ctrl-p
%% enter l
%% ctrl-l

%% Same as normal mode
%% esc ctrl-c ZZ ZQ q
%% ctrl-b ctrl-f
%% ctrl-d ctrl-u
%% ctrl-e ctrl-y
%% /
%% ?
%% n
%% N
%% [count]G
%% [count]gg
%% H
%% M
%% L
%% zb
%% zt
%% zz
%% zh
%% zl
%% zH
%% zL
%% :
%% b
%% B
%% v
%% gf
%% e
%% c


%% compare view normal
%% 	* `dp`			?
%% 	* `do`			?
%% 	* `]c / [c`		?

%% commands

%% :[range]!command
%% :[range]!command &
%% :[range]!!command
%% :!!
%% :[range]alink[!?]
%% :[range]alink[!] path
%% :[range]alink[!] name1 name2...
%% :apropos keyword...
%% :apropos
%% :au[tocmd] {event} {pat} {cmd}
%% :au[tocmd] [{event}] [{pat}]
%% :au[tocmd]! [{event}] [{pat}]
%% :bmarks
%% :bmark! path tag1 [tag2 [tag3...]]
%% :bmarks
%% :bmarks [tag1 [tag2...]]
%% :bmgo [tag1 [tag2...]]
%% :ca[bbrev]
%% :ca[bbrev] lhs-prefix
%% :ca[bbrev] lhs rhs
%% :cnorea[bbrev]
%% :cnorea[bbrev] lhs-prefix
%% :cnorea[bbrev] lhs rhs
%% :cd or :cd ~ or :cd $HOME
%% :cd -
%% :cd ~/dir
%% :cd /curr/dir /other/dir
%% :cd! /dir
%% :cds[!] pattern string [flags]
%% :cds[!]/pattern/string/[flags]
%% :c[hange]                                     
%% :[range]chmod
%% :[range]chmod[!] arg...                        
%% :[range]chown
%% :[range]chown [user][:][group]
%% :[range]clone[!?]
%% :[range]clone[!] path
%% :[range]clone[!] name1 name2...
%% :colo[rscheme]?
%% :colo[rscheme]
%% :colo[rscheme] color_scheme_name
%% :colo[rscheme] color_scheme_name directory
%% :colo[rscheme] color_scheme_name color_scheme_name...
%% :comc[lear]                                
%% :com[mand]
%% :com[mand] prefix
%% :com[mand][!] name action[ &]
%% :com[mand] name /pattern
%% :com[mand] name =pattern
%% :com[mand] name filter{:filter args}
%% :com[mand] name :commands
%% :compare [byname | bysize | bycontents | listall | listunique | listdups | ofboth | ofone | groupids | grouppaths | skipempty]...
%% :cope[n]                                    
%% :[range]co[py][!?][ &]
%% :[range]co[py][!] path[ &]
%% :[range]co[py][!] name1 name2...[ &]
%% :cq[uit][!]                                  
%% :cuna[bbrev] lhs
%% :cuna[bbrev] rhs
%% :delbmarks
%% :delbmarks tag1 [tag2 [tag3...]]
%% :delbmarks!
%% :delbmarks! path1 [path2 [path3...]]
%% :delc[ommand] user_command                    
%% :[range]d[elete][!] [reg] [count]
%% :[range]d[elete][!] [count] &
%% :delm[arks]!
%% :delm[arks] marks ...
%% :di[splay]
%% :di[splay] list
%% :dirs                                         
%% :ec[ho] [<expr>...]                           
%% :[range]e[dit] [file...]                      
%% :el[se]                                       
%% :elsei[f] {expr1}                             
%% :empty                                        
%% :en[dif]                                      
%% :exe[cute] [<expr>...]                        
%% :exi[t][!]                                    
%% :f[ile][ &]
%% :f[ile] arg[ &]
%% :filet[ype] pattern-list [{ descr }]def_program[ &],[{ descr }]prog2[ &],...
%% :filet[ype] filename
%% :filex[type] pattern-list [{ description }] def_program,program2,...
%% :filext[ype] filename
%% :filev[iewer] pattern-list command1,command2,...
%% :filev[iewer] filename
%% :filter[!] {pattern}
%% :filter[!] {empty-pattern}
%% :filter
%% :filter!
%% :filter?
%% :[range]fin[d] pattern
%% :[range]fin[d] -opt...
%% :[range]fin[d] path -opt...
%% :[range]fin[d]
%% :fini[sh]                                    
%% :go[to] path                                
%% :[range]gr[ep][!] pattern
%% :[range]gr[ep][!] -opt...
%% :[range]gr[ep][!]
